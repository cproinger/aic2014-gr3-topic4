<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <context:annotation-config/>

    <!-- DB config -->
    <bean id="graphDatabaseService" class="org.neo4j.test.ImpermanentGraphDatabase"
          destroy-method="shutdown"/>

    <bean id="serverWrapper" class="org.neo4j.server.WrappingNeoServerBootstrapper"
          init-method="start" destroy-method="stop" lazy-init="false">
        <constructor-arg ref="graphDatabaseService"/>
    </bean>

    <bean id="graphdb" class="org.neo4j.rest.graphdb.RestGraphDatabase" destroy-method="shutdown">
        <constructor-arg name="uri" value="http://localhost:7474/db/data"/>
    </bean>
    <bean id="engine" class="org.neo4j.rest.graphdb.query.RestCypherQueryEngine">
        <constructor-arg name="restApi">
            <bean factory-bean="graphdb" factory-method="getRestAPI"/>
        </constructor-arg>
    </bean>

    <!-- DAO Layer -->
    <bean id="twitterUserRelationshipHandlerFactory" class="at.tuwien.aic2014.gr3.graphdb.TwitterUserRelationshipHandlerFactory"
          lazy-init="true">
        <property name="graphDb" ref="graphdb"/>
    </bean>

    <bean id="neo4jTwitterUserDao" class="at.tuwien.aic2014.gr3.graphdb.Neo4jTwitterUserRepository"
          lazy-init="true">
        <property name="graphDb" ref="graphdb"/>
        <property name="twitterUserRelationshipHandlerFactory" ref="twitterUserRelationshipHandlerFactory"/>
    </bean>

    <bean id="testTwitterUser" class="at.tuwien.aic2014.gr3.domain.TwitterUser" lazy-init="true">
        <property name="id" value="1"/>
    </bean>


    <!-- Twitter status processors -->
    <bean id="mentionedUsersStatusProcessor" class="at.tuwien.aic2014.gr3.tweetsminer.MentionedUsersTwitterStatusProcessor"
          lazy-init="true">
        <property name="twitterUserDao" ref="neo4jTwitterUserDao"/>
    </bean>

    <bean id="mentionedHashtagsStatusProcessor" class="at.tuwien.aic2014.gr3.tweetsminer.MentionedHashtagsTwitterStatusProcessor"
          lazy-init="true">
        <property name="twitterUserDao" ref="neo4jTwitterUserDao"/>
    </bean>

    <bean id="retweetedUserStatusProcessor" class="at.tuwien.aic2014.gr3.tweetsminer.RetweetedUserTwitterStatusProcessor"
          lazy-init="true">
        <property name="twitterUserDao" ref="neo4jTwitterUserDao"/>
    </bean>

    <bean id="repliedToStatusProcessor" class="at.tuwien.aic2014.gr3.tweetsminer.RepliedToTwitterStatusProcessor"
          lazy-init="true">
        <property name="twitterUserDao" ref="neo4jTwitterUserDao"/>
    </bean>

    <bean id="topicExtractionStatusProcessor" class="at.tuwien.aic2014.gr3.tweetsminer.TopicExtractionTwitterStatusProcessor"
          lazy-init="true">
        <property name="twitterUserDao" ref="neo4jTwitterUserDao"/>
        <property name="tweetFilterChain" ref="tweetFilterChain"/>
    </bean>


    <!-- Topic extractor filters -->
    <bean id="tweetFilterChain" class="at.tuwien.aic2014.gr3.tweetsminer.filters.TweetFilterChain"
          lazy-init="true">
        <constructor-arg name="tweetFiltersChain">
                <list>
                    <ref bean="removeRetweetUserFilter"/>
                    <ref bean="removeHashtagMentionsFilter"/>
                    <ref bean="removeTwitterUserMentionsFilter"/>
                    <ref bean="removeUrlsFilter"/>
                    <ref bean="smartTokenizerTweetFilter"/>
                </list>
        </constructor-arg>
    </bean>

    <bean id="removeRetweetUserFilter" class="at.tuwien.aic2014.gr3.tweetsminer.filters.RemoveRetweetHeaderTweetFilter"
          lazy-init="true"/>

    <bean id="removeTwitterUserMentionsFilter" class="at.tuwien.aic2014.gr3.tweetsminer.filters.RemoveUserMentionsTweetFilter"
          lazy-init="true"/>

    <bean id="removeHashtagMentionsFilter" class="at.tuwien.aic2014.gr3.tweetsminer.filters.RemoveHashtagsTweetFilter"
          lazy-init="true"/>

    <bean id="removeUrlsFilter" class="at.tuwien.aic2014.gr3.tweetsminer.filters.RemoveUrlsTweetFilter"
          lazy-init="true"/>

    <bean id="smartTokenizerTweetFilter" class="at.tuwien.aic2014.gr3.tweetsminer.filters.SmartTokenizerTweetFilter"
          lazy-init="true">
        <property name="tokenizer" ref="opennlpTokenizer"/>
        <property name="nameFinder" ref="opennlpNameFinder"/>
        <property name="stopwords">
            <bean factory-bean="enStopWords" factory-method="readNext"/>
        </property>
    </bean>

    <!-- opennlp config -->
    <bean id="opennlpTokenizer" class="opennlp.tools.tokenize.TokenizerME">
        <constructor-arg>
            <bean class="opennlp.tools.tokenize.TokenizerModel">
                <constructor-arg ref="enTokenizerTrainedData"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="opennlpNameFinder" class="opennlp.tools.namefind.NameFinderME">
        <constructor-arg>
            <bean class="opennlp.tools.namefind.TokenNameFinderModel">
                <constructor-arg ref="enPersonNamesTrainedData"/>
            </bean>
        </constructor-arg>
    </bean>

    <!-- Resources -->
    <bean id="enTokenizerTrainedDataResource" class="org.springframework.core.io.ClassPathResource">
        <constructor-arg value="en-token.bin"/>
    </bean>
    <bean id="enTokenizerTrainedData"
          factory-bean="enTokenizerTrainedDataResource" factory-method="getFile"/>

    <bean id="enPersonNamesTrainedDataResource" class="org.springframework.core.io.ClassPathResource">
        <constructor-arg value="en-ner-person.bin"/>
    </bean>
    <bean id="enPersonNamesTrainedData"
          factory-bean="enPersonNamesTrainedDataResource" factory-method="getFile"/>

    <bean id="enStopwordsResource" class="org.springframework.core.io.ClassPathResource">
        <constructor-arg value="stopwords.csv"/>
    </bean>
    <bean id="enStopWords" class="au.com.bytecode.opencsv.CSVReader">
        <constructor-arg>
            <bean class="java.io.FileReader">
                <constructor-arg>
                    <bean factory-bean="enStopwordsResource" factory-method="getFile"/>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
</beans>